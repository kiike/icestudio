name: 'Icestudio for Linux'

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the
  # develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially
# or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of
    # the job
    steps:
     
      # Checkout the develop branch
      - uses: actions/checkout@v3
      
      - name: Setup Nodejs version
        uses: actions/setup-node@v3
        with:
          node-version: '21.1.0'
      
      - name: Install npm dependencies
        run:   npm install --legacy-peer-deps
      
      - name: Build Linux
        run: |
          sudo apt install -y libfuse2
          export DISPLAY=:0.0 
          npm run buildLinux64
          
      # jq is bash command for reading properties from a json file
      - name: Install jq package
        run: sudo apt install jq

      # Read the icestudio version from package.json (version property)
      - id: icestudio_json
        run: |
          version=$(jq -r '.version' package.json)
          echo "icestudio_version=${version}" >> $GITHUB_OUTPUT
    
      # Timestamp for the build
      - id: build_date
        run: |
          timestamp=$(jq -r '.ts' app/buildinfo.json)
          echo "icestudio_timestamp=${timestamp}" >> $GITHUB_OUTPUT
          
      - name: 'Upload AppImage/linux64'
        env:
          ICESTUDIO_VERSION: "${{steps.icestudio_json.outputs.icestudio_version}}" 
          TIMESTAMP: "${{steps.build_date.outputs.icestudio_timestamp}}"
        uses: 'actions/upload-artifact@v3'
        with:
          name: "linux64_AppImage_${{env.ICESTUDIO_VERSION}}${{env.TIMESTAMP}}"
          path: "dist/icestudio-${{env.ICESTUDIO_VERSION}}${{env.TIMESTAMP}}-linux64.AppImage"
          if-no-files-found: error
          
      - name: 'Upload ZIP/linux64'
        env:
          ICESTUDIO_VERSION: "${{steps.icestudio_json.outputs.icestudio_version}}"
          TIMESTAMP: "${{steps.build_date.outputs.icestudio_timestamp}}"
        uses: 'actions/upload-artifact@v3'
        with:
          name: "linux64_ZIP_${{env.ICESTUDIO_VERSION}}${{env.TIMESTAMP}}"
          path: "dist/icestudio-${{env.ICESTUDIO_VERSION}}${{env.TIMESTAMP}}-linux64.zip"
          if-no-files-found: error
